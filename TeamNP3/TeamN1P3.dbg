Input file: TeamN1P3.ss
   1: ;(define (not_main a b)
   2:  ; (display 5)
   3:   ;(newline)
   4: ;)
   5: 
   6: (define (multTest)
	LPAREN_T        (
program function called
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         multTest
	RPAREN_T        )
   7: 	(* 7 2)
	LPAREN_T        (
	MULT_T          *
	NUMLIT_T        7
	NUMLIT_T        2
	RPAREN_T        )
   8: 	)
	RPAREN_T        )
   9: 
  10: (define (plusTest n)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         plusTest
	IDENT_T         n
	RPAREN_T        )
  11: 	(+ n 4 6)
	LPAREN_T        (
	PLUS_T          +
	IDENT_T         n
	NUMLIT_T        4
	NUMLIT_T        6
	RPAREN_T        )
  12: 	)
	RPAREN_T        )
  13: 
  14: (define (plusMultTest n)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         plusMultTest
	IDENT_T         n
	RPAREN_T        )
  15: 	(+ (* n 17) n (* 8 92))
	LPAREN_T        (
	PLUS_T          +
	LPAREN_T        (
	MULT_T          *
	IDENT_T         n
	NUMLIT_T        17
	RPAREN_T        )
	IDENT_T         n
	LPAREN_T        (
	MULT_T          *
	NUMLIT_T        8
	NUMLIT_T        92
	RPAREN_T        )
	RPAREN_T        )
  16: 	(+ 2 2)
	LPAREN_T        (
	PLUS_T          +
	NUMLIT_T        2
	NUMLIT_T        2
	RPAREN_T        )
  17: 	(+ n 4 6)
	LPAREN_T        (
	PLUS_T          +
	IDENT_T         n
	NUMLIT_T        4
	NUMLIT_T        6
	RPAREN_T        )
  18: 	)
	RPAREN_T        )
  19: 
  20: (define (ifstmt a b)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         ifstmt
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  21: 	(if(< a b)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LT_T            <
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  22: 		a
	IDENT_T         a
  23: 		b
	IDENT_T         b
  24: 		)
	RPAREN_T        )
  25: 	(if(>= a b)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	GTE_T           >=
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  26: 		b
	IDENT_T         b
  27: 		)
	RPAREN_T        )
  28: 	)
	RPAREN_T        )
  29: 
  30: (define(funcAll a b c)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         funcAll
	IDENT_T         a
	IDENT_T         b
	IDENT_T         c
	RPAREN_T        )
  31: 	(plusTest a)
	LPAREN_T        (
	IDENT_T         plusTest
	IDENT_T         a
	RPAREN_T        )
  32: 	)
	RPAREN_T        )
  33: 
  34: (define (predCheck b)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         predCheck
	IDENT_T         b
	RPAREN_T        )
  35: 	(if (null? b)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	NULLP_T         null?
	IDENT_T         b
	RPAREN_T        )
  36: 		b
	IDENT_T         b
  37: 		)
	RPAREN_T        )
  38: 	(if (not (list? b))
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	NOT_T           not
	LPAREN_T        (
	LISTP_T         list?
	IDENT_T         b
	RPAREN_T        )
	RPAREN_T        )
  39: 		7
	NUMLIT_T        7
  40: 		)
	RPAREN_T        )
  41: 	)
	RPAREN_T        )
  42: 
  43: (define (consTest a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         consTest
	IDENT_T         a
	RPAREN_T        )
  44: 	(cons 'abcxyz '(1 2 3 4 5))
	LPAREN_T        (
	CONS_T          cons
	QUOTE_T         '
	IDENT_T         abcxyz
	QUOTE_T         '
	LPAREN_T        (
	NUMLIT_T        1
	NUMLIT_T        2
	NUMLIT_T        3
	NUMLIT_T        4
	NUMLIT_T        5
	RPAREN_T        )
	RPAREN_T        )
  45: 	)
	RPAREN_T        )
  46: 
  47: (define (coutTest)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         coutTest
	RPAREN_T        )
  48: 	(display (plusTest 2))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         plusTest
	NUMLIT_T        2
	RPAREN_T        )
	RPAREN_T        )
  49: 	)
	RPAREN_T        )
  50: 
  51: (define (listopTest mylist)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         listopTest
	IDENT_T         mylist
	RPAREN_T        )
  52: 	(cdr '(a b c))
	LPAREN_T        (
	LISTOP_T        cdr
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         a
	IDENT_T         b
	IDENT_T         c
	RPAREN_T        )
	RPAREN_T        )
  53: 	(cdr '(d e f))
	LPAREN_T        (
	LISTOP_T        cdr
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         d
	IDENT_T         e
	IDENT_T         f
	RPAREN_T        )
	RPAREN_T        )
  54: 	(car (cdr mylist))
	LPAREN_T        (
	LISTOP_T        car
	LPAREN_T        (
	LISTOP_T        cdr
	IDENT_T         mylist
	RPAREN_T        )
	RPAREN_T        )
  55: 	)
	RPAREN_T        )
  56: 
  57: (define (main)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         main
	RPAREN_T        )
  58: 	)
	RPAREN_T        )
0 errors found in input file
