Input file: TeamN1P3.ss
   1: (define (multTest)
	LPAREN_T        (
program function called
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         multTest
	RPAREN_T        )
   2: 	(* 7 2)
	LPAREN_T        (
	MULT_T          *
	NUMLIT_T        7
	NUMLIT_T        2
	RPAREN_T        )
   3: 	)
	RPAREN_T        )
   4: 
   5: (define (plusTest n)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         plusTest
	IDENT_T         n
	RPAREN_T        )
   6: 	(+ n 4 6)
	LPAREN_T        (
	PLUS_T          +
	IDENT_T         n
	NUMLIT_T        4
	NUMLIT_T        6
	RPAREN_T        )
   7: 	)
	RPAREN_T        )
   8: 
   9: (define (plusMultTest n)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         plusMultTest
	IDENT_T         n
	RPAREN_T        )
  10: 	(+ (* n 17) n (* 8 92))
	LPAREN_T        (
	PLUS_T          +
	LPAREN_T        (
	MULT_T          *
	IDENT_T         n
	NUMLIT_T        17
	RPAREN_T        )
	IDENT_T         n
	LPAREN_T        (
	MULT_T          *
	NUMLIT_T        8
	NUMLIT_T        92
	RPAREN_T        )
	RPAREN_T        )
  11: 	(+ 2 2)
	LPAREN_T        (
	PLUS_T          +
	NUMLIT_T        2
	NUMLIT_T        2
	RPAREN_T        )
  12: 	(+ n 4 6)
	LPAREN_T        (
	PLUS_T          +
	IDENT_T         n
	NUMLIT_T        4
	NUMLIT_T        6
	RPAREN_T        )
  13: 	)
	RPAREN_T        )
  14: 
  15: (define (ifstmt a b)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         ifstmt
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  16: 	(if(< a b)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LT_T            <
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  17: 		a
	IDENT_T         a
  18: 		b
	IDENT_T         b
  19: 		)
	RPAREN_T        )
  20: 	;;(if(>= a b)
  21: 	;;	b
  22: 	;;	)
  23: 	)
	RPAREN_T        )
  24: 
  25: (define(funcAll a b c)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         funcAll
	IDENT_T         a
	IDENT_T         b
	IDENT_T         c
	RPAREN_T        )
  26: 	(plusTest a)
	LPAREN_T        (
	IDENT_T         plusTest
	IDENT_T         a
	RPAREN_T        )
  27: 	)
	RPAREN_T        )
  28: 
  29: (define (predCheck b)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         predCheck
	IDENT_T         b
	RPAREN_T        )
  30: 	(if (null? b)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	NULLP_T         null?
	IDENT_T         b
	RPAREN_T        )
  31: 		b	
	IDENT_T         b
  32: 		(if (not (list? b))
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	NOT_T           not
	LPAREN_T        (
	LISTP_T         list?
	IDENT_T         b
	RPAREN_T        )
	RPAREN_T        )
  33: 			7
	NUMLIT_T        7
  34: 			(if (symbol? b)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	SYMBOLP_T       symbol?
	IDENT_T         b
	RPAREN_T        )
  35: 				8
	NUMLIT_T        8
  36: 				(if (> b 8)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	GT_T            >
	IDENT_T         b
	NUMLIT_T        8
	RPAREN_T        )
  37: 					9
	NUMLIT_T        9
  38: 					(+ 2 2)
	LPAREN_T        (
	PLUS_T          +
	NUMLIT_T        2
	NUMLIT_T        2
	RPAREN_T        )
  39: 					)
	RPAREN_T        )
  40: 				)
	RPAREN_T        )
  41: 			)
	RPAREN_T        )
  42: 	)
	RPAREN_T        )
  43: )
	RPAREN_T        )
  44: 
  45: (define (consTest lst)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         consTest
	IDENT_T         lst
	RPAREN_T        )
  46: 	(cons lst '(1 2 3 4 5))
	LPAREN_T        (
	CONS_T          cons
	IDENT_T         lst
	QUOTE_T         '
	LPAREN_T        (
	NUMLIT_T        1
	NUMLIT_T        2
	NUMLIT_T        3
	NUMLIT_T        4
	NUMLIT_T        5
	RPAREN_T        )
	RPAREN_T        )
  47: 	)
	RPAREN_T        )
  48: 
  49: (define (coutTest)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         coutTest
	RPAREN_T        )
  50: 	(display (plusTest 2))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         plusTest
	NUMLIT_T        2
	RPAREN_T        )
	RPAREN_T        )
  51: 	)
	RPAREN_T        )
  52: 
  53: (define (listopTest mylist)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         listopTest
	IDENT_T         mylist
	RPAREN_T        )
  54: 	(cdr '(a b c))
	LPAREN_T        (
	LISTOP_T        cdr
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         a
	IDENT_T         b
	IDENT_T         c
	RPAREN_T        )
	RPAREN_T        )
  55: 	(cdr '(d e f))
	LPAREN_T        (
	LISTOP_T        cdr
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         d
	IDENT_T         e
	IDENT_T         f
	RPAREN_T        )
	RPAREN_T        )
  56: 	(car (cdr mylist))
	LPAREN_T        (
	LISTOP_T        car
	LPAREN_T        (
	LISTOP_T        cdr
	IDENT_T         mylist
	RPAREN_T        )
	RPAREN_T        )
  57: 	)
	RPAREN_T        )
  58: 
  59: (define (main)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         main
	RPAREN_T        )
  60: 	(display 'Hello_world)
	LPAREN_T        (
	DISPLAY_T       display
	QUOTE_T         '
	IDENT_T         Hello_world
	RPAREN_T        )
  61: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  62: 	(display (multTest))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         multTest
	RPAREN_T        )
	RPAREN_T        )
  63: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  64: 	(display (plusTest 5))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         plusTest
	NUMLIT_T        5
	RPAREN_T        )
	RPAREN_T        )
  65: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  66: 	(display (plusMultTest 17))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         plusMultTest
	NUMLIT_T        17
	RPAREN_T        )
	RPAREN_T        )
  67: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  68: 	(display (ifstmt 1 3))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         ifstmt
	NUMLIT_T        1
	NUMLIT_T        3
	RPAREN_T        )
	RPAREN_T        )
  69: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  70: 	(display (funcAll 28 31 34))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         funcAll
	NUMLIT_T        28
	NUMLIT_T        31
	NUMLIT_T        34
	RPAREN_T        )
	RPAREN_T        )
  71: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  72: 	(display (predCheck '()))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         predCheck
	QUOTE_T         '
	LPAREN_T        (
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
  73: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  74: 	(display (consTest '(a b c)))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         consTest
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         a
	IDENT_T         b
	IDENT_T         c
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
  75: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  76: 	(coutTest)
	LPAREN_T        (
	IDENT_T         coutTest
	RPAREN_T        )
  77: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  78: 	(display (listopTest '(a b c)))
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         listopTest
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         a
	IDENT_T         b
	IDENT_T         c
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
  79: 	)
	RPAREN_T        )
  80: 
  81: ;;(main)
0 errors found in input file
